- replace RegexMethods using Import() (just need fast reference finder)
- handle static regex methods (requires variable capture)
- handle timeouts (requires variable capture)
- test lots of combinations of things (const fields, local const, literals, static methods, constructors, timeouts)
- test case where regex references are branch targets (since they get replaced/removed)
- add logging (e. g. regex compile errors, no impact warnings, logging about each regex and why it can or can't be converted etc)
- avoid re-creating compiled assembly if we don't need to (using hash attribute?). Hash should include tool's version
- consider using InternalsVisibleTo + non public on compiled regex assembly
- consider alternate ways to package assembly (e. g. runtime load from resource, copy-in)
- consider options to expose in Fody element
- github repo
- finalize naming of inline types
- publish package 